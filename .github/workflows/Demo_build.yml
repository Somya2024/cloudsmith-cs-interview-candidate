name: Build and Publish Python Package

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  CLOUDSMITH_NAMESPACE: ${{ vars.CLOUDSMITH_NAMESPACE }}
  CLOUDSMITH_REPOSITORY: "staging"
  CLOUDSMITH_SERVICE_SLUG: ${{ vars.CLOUDSMITH_SERVICE_SLUG }}

permissions:
  contents: read
  actions: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Build package
        run: python -m build

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: python-package
          path: dist/*

  publish:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: python-package
          path: dist

      - name: List directory contents
        run: ls -la dist/

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install Cloudsmith CLI (OIDC)
        uses: cloudsmith-io/cloudsmith-cli-action@v1.0.4
        with:
           oidc-namespace: ${{ env.CLOUDSMITH_NAMESPACE }}
           oidc-service-slug: ${{ env.CLOUDSMITH_SERVICE_SLUG }}
      

      - name: Push package(s) to Cloudsmith (OIDC)
        run: |
          files=$(ls dist/*.tar.gz dist/*.whl 2>/dev/null || true)
          if [ -z "$files" ]; then
          echo " No package found to upload"
          exit 1
          fi

           for file in $files; do
          echo " Uploading $file ..."
          cloudsmith push python "${CLOUDSMITH_NAMESPACE}/${CLOUDSMITH_REPOSITORY}" "$file" --republish
          done

