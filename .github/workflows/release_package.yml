name: Publish Python Package

on:
  workflow_run:
    workflows: [ "Build Python Package" ]   # must match build workflow name exactly
    types: [ completed ]
    branches: [ main ]

env:
  CLOUDSMITH_NAMESPACE: ${{ vars.CLOUDSMITH_NAMESPACE }}
  CLOUDSMITH_REPOSITORY: "staging"
  CLOUDSMITH_SERVICE_SLUG: ${{ vars.CLOUDSMITH_SERVICE_SLUG }}

permissions:
  contents: read
  id-token: write   # required for OIDC

jobs:
  publish:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Download artifact from build run
        uses: actions/download-artifact@v4
        with:
          name: python-package                  # matches the artifact name from build
          path: dist
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ github.token }}
          repository: ${{ github.repository }}

      - name: List built artifacts
        run: ls -la dist/

      - name: Install Cloudsmith CLI (OIDC)
        uses: cloudsmith-io/cloudsmith-cli-action@v1
        with:
          oidc: true
          oidc-namespace: ${{ env.CLOUDSMITH_NAMESPACE }}
          oidc-service-slug: ${{ env.CLOUDSMITH_SERVICE_SLUG }}

      - name: Push package(s) to Cloudsmith (staging)
        run: |
          set -euo pipefail
          shopt -s nullglob
          FILES=(dist/*.whl dist/*.tar.gz)

          if [ ${#FILES[@]} -eq 0 ]; then
            echo "No .whl or .tar.gz found in dist/"
            exit 1
          fi

          for f in "${FILES[@]}"; do
            echo "Uploading $f"
            cloudsmith push python "${{ env.CLOUDSMITH_NAMESPACE }}/${{ env.CLOUDSMITH_REPOSITORY }}" "$f" --republish
          done
