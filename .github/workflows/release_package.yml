name: Release to Cloudsmith (staging)

on:
  workflow_run:
    workflows: ["Build Python Package"]
    types: [completed]

permissions:
  contents: read
  id-token: write      # required for OIDC to Cloudsmith
  actions: read        # needed to read artifacts from another run

env:
  CS_STAGING_REPO: "staging"

jobs:
  release:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifact from triggering run
        uses: actions/download-artifact@v4
        with:
          name: dist-artifact
          path: dist
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Validate OIDC inputs
        run: |
          [ -n "${{ secrets.CS_OIDC_NAMESPACE }}" ] || { echo "Missing secret: CS_OIDC_NAMESPACE"; exit 1; }
          [ -n "${{ secrets.CS_OIDC_SERVICE_SLUG }}" ] || { echo "Missing secret: CS_OIDC_SERVICE_SLUG"; exit 1; }

      - name: Install Cloudsmith CLI (OIDC)
        uses: cloudsmith-io/cloudsmith-cli-action@v1.0.4
        with:
          oidc: true
          oidc-namespace: ${{ secrets.CS_OIDC_NAMESPACE }}
          oidc-service-slug: ${{ secrets.CS_OIDC_SERVICE_SLUG }}

      - name: Push Python package(s) to Cloudsmith staging
        run: |
          shopt -s nullglob
          for pkg in dist/*.whl dist/*.tar.gz; do
            echo "Pushing $pkg"
            cloudsmith push python "${{ secrets.CS_OIDC_NAMESPACE }}/${{ env.CS_STAGING_REPO }}" "$pkg"
          done
