name: Promote Python Package

on:
  repository_dispatch:
    types: [package_synchronised]   # Triggered by Cloudsmith webhook

permissions:
  contents: read
  id-token: write
  actions: read

env:
  CLOUDSMITH_NAMESPACE: ${{ vars.CLOUDSMITH_NAMESPACE }}
  CLOUDSMITH_STAGING_REPO: "staging"
  CLOUDSMITH_PROD_REPO: "production"
  READY_TAG: "ready-for-production"

jobs:
  promote:
    runs-on: ubuntu-latest

    steps:
      - name: Debug full webhook payload
        run: |
          echo "=== Webhook event payload received from Cloudsmith ==="
          echo "${{ toJson(github.event) }}"
          echo "======================================================"

      - name: Install Cloudsmith CLI (OIDC)
        uses: cloudsmith-io/cloudsmith-cli-action@v1.0.4
        with:
          oidc-namespace: ${{ env.CLOUDSMITH_NAMESPACE }}
          oidc-service-slug: ${{ vars.CLOUDSMITH_SERVICE_SLUG }}

      - name: Install jq (for JSON processing)
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Show webhook payload (parsed fields)
        run: |
          echo "slug=${{ github.event.client_payload.slug }}"
          echo "name=${{ github.event.client_payload.name }}"
          echo "version=${{ github.event.client_payload.version }}"
          echo "format=${{ github.event.client_payload.format }}"

      - name: Tag the synced package as ready-for-production
        run: |
          SLUG="${{ github.event.client_payload.slug }}"
          if [ -z "$SLUG" ] || [ "$SLUG" = "null" ]; then
            echo "No slug in payload; resolving by name/version..."
            SLUG=$(cloudsmith ls pkg "${CLOUDSMITH_NAMESPACE}/${CLOUDSMITH_STAGING_REPO}" \
              -q "name:${{ github.event.client_payload.name }} AND version:${{ github.event.client_payload.version }}" \
              -F json | jq -r '.data[0].slug')
          fi
          if [ -z "$SLUG" ] || [ "$SLUG" = "null" ]; then
            echo "Could not resolve package slug from payload"
            exit 1
          fi
          cloudsmith tags add "${CLOUDSMITH_NAMESPACE}/${CLOUDSMITH_STAGING_REPO}" "$SLUG" "${READY_TAG}"

      - name: Promote all 'ready-for-production' packages from staging → production
        run: |
          cloudsmith ls pkg "${CLOUDSMITH_NAMESPACE}/${CLOUDSMITH_STAGING_REPO}" -q "tag:${READY_TAG}" -F json \
          | jq -r '.data[] | "\(.namespace)/\(.repository)/\(.slug)"' \
          | while read -r pkgref; do
              echo "Promoting $pkgref → ${CLOUDSMITH_PROD_REPO}"
              cloudsmith move "$pkgref" "${CLOUDSMITH_PROD_REPO}"
            done
