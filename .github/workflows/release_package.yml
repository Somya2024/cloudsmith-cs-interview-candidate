name: Publish Python Package

on:
  workflow_run:
    workflows: ["Build Python Package"]   # must match the build workflow name exactly
    types: [completed]

# Hard-code values to avoid repo-variable mistakes during the assessment
env:
  CLOUDSMITH_NAMESPACE: interview-somya-lavania
  CLOUDSMITH_REPOSITORY: staging
  CLOUDSMITH_SERVICE_SLUG: gha-ci

permissions:
  contents: read
  id-token: write   # REQUIRED for OIDC

jobs:
  publish:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: Download artifact from Build
        uses: actions/download-artifact@v4
        with:
          name: python-package
          path: dist
          repository: ${{ github.repository }}
          github-token: ${{ github.token }}
          run-id: ${{ github.event.workflow_run.id }}

      - name: List dist contents
        run: ls -la dist || true

      # Authenticate + install Cloudsmith CLI via OIDC (pin to a valid tag)
      - name: Authenticate to Cloudsmith via OIDC
        uses: cloudsmith-io/cloudsmith-cli-action@v1.0.3
        with:
          oidc-namespace: ${{ env.CLOUDSMITH_NAMESPACE }}
          oidc-service-slug: ${{ env.CLOUDSMITH_SERVICE_SLUG }}

      - name: Show Cloudsmith identity (sanity check)
        run: |
          cloudsmith --version
          cloudsmith whoami

      - name: Push sdist and wheel to Cloudsmith (staging)
        shell: bash
        run: |
          shopt -s nullglob
          files=(dist/*.tar.gz dist/*.whl)
          if [ ${#files[@]} -eq 0 ]; then
            echo "No build artifacts found in dist/"
            ls -la dist || true
            exit 1
          fi
          echo "Uploading: ${files[@]}"
          cloudsmith push python \
            "${{ env.CLOUDSMITH_NAMESPACE }}/${{ env.CLOUDSMITH_REPOSITORY }}" \
            "${files[@]}" --republish
